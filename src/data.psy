glb ::= struct
{
	errmsg : u8?;
	json : json_data;

	default_scene : u64;
	scenes : glb_scene mut?;
	scenes_count : u64;

	nodes : glb_node mut?;
	nodes_count : u64;
};

glb_scene ::= struct
{
	name : u8?;
	name_len : u64;
	node_indices : u64?;
	node_indices_count : u64;
};

glb_badidx : u64 static := -1;

glb_node ::= struct
{
	name : u8?;
	name_len : u64;
	mesh_idx : u64;
	skin_idx : u64;
};

glb_scene_verbose_print ::= func(s : glb_scene -> v0)
{
	putbytes(s.name, s.name_len);
	putzstr(": [");
	i : u64 mut;
	for(i = 0, i < (s.node_indices_count), i = i + 1)
	{
		putuint(deref(s.node_indices # i));
		if(i < (s.node_indices_count - 1))
		{
			putchar(' ');
		}
	}
	putzstr("]");
};

glb_verbose_print ::= func(g : glb -> v0)
{
	if(g.errmsg != zero)
	{
		putzstr("glb error: ");
		putzstr(g.errmsg);
		putchar(10);
		return;
	}
	i : u64 mut;
	for(i = 0, i < (g.scenes_count), i = i + 1)
	{
		glb_scene_verbose_print(deref(g.scenes # i));
		putchar(10);
	}
};
